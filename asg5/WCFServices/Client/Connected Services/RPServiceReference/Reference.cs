//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.RPServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RPServiceReference.IRegister")]
    public interface IRegister {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/Register", ReplyAction="http://tempuri.org/IRegister/RegisterResponse")]
        int Register(int StuNo, string CourseNo, string SecNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/Register", ReplyAction="http://tempuri.org/IRegister/RegisterResponse")]
        System.Threading.Tasks.Task<int> RegisterAsync(int StuNo, string CourseNo, string SecNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/ListRegistered", ReplyAction="http://tempuri.org/IRegister/ListRegisteredResponse")]
        string[] ListRegistered(int StuNo, string semester, string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/ListRegistered", ReplyAction="http://tempuri.org/IRegister/ListRegisteredResponse")]
        System.Threading.Tasks.Task<string[]> ListRegisteredAsync(int StuNo, string semester, string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/ListAvailable", ReplyAction="http://tempuri.org/IRegister/ListAvailableResponse")]
        string[] ListAvailable(string semester, string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRegister/ListAvailable", ReplyAction="http://tempuri.org/IRegister/ListAvailableResponse")]
        System.Threading.Tasks.Task<string[]> ListAvailableAsync(string semester, string year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRegisterChannel : Client.RPServiceReference.IRegister, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterClient : System.ServiceModel.ClientBase<Client.RPServiceReference.IRegister>, Client.RPServiceReference.IRegister {
        
        public RegisterClient() {
        }
        
        public RegisterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RegisterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegisterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RegisterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Register(int StuNo, string CourseNo, string SecNo) {
            return base.Channel.Register(StuNo, CourseNo, SecNo);
        }
        
        public System.Threading.Tasks.Task<int> RegisterAsync(int StuNo, string CourseNo, string SecNo) {
            return base.Channel.RegisterAsync(StuNo, CourseNo, SecNo);
        }
        
        public string[] ListRegistered(int StuNo, string semester, string year) {
            return base.Channel.ListRegistered(StuNo, semester, year);
        }
        
        public System.Threading.Tasks.Task<string[]> ListRegisteredAsync(int StuNo, string semester, string year) {
            return base.Channel.ListRegisteredAsync(StuNo, semester, year);
        }
        
        public string[] ListAvailable(string semester, string year) {
            return base.Channel.ListAvailable(semester, year);
        }
        
        public System.Threading.Tasks.Task<string[]> ListAvailableAsync(string semester, string year) {
            return base.Channel.ListAvailableAsync(semester, year);
        }
    }
}
